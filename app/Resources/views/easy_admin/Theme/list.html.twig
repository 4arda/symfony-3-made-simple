{% extends '@EasyAdmin/default/list.html.twig' %}
{% block main %}
    {% set _list_item_actions = easyadmin_get_actions_for_list_item(_entity_config.name) %}

    <div class="themes-wrapper">
        <div class="themes-inner">
            {% block table_body %}
                {% for item in paginator.currentPageResults %}
                    {% set _item_id = attribute(item, _entity_config.primary_key_field_name) %}
                    <div data-id="{{ _item_id }}" class="theme-item col-md-3">
                        <div class="theme-item-inner panel panel-default ">
                            {% for field, metadata in fields %}
                                {% set isSortingField = metadata.property == app.request.get('sortField') %}
                                {% set _column_label =  (metadata.label ?: field|humanize)|trans(_trans_parameters)  %}
                                <div data-label="{{ _column_label }}" class="{{ isSortingField ? 'sorted' }} {{ metadata.dataType|lower }} {{ metadata.css_class }}">
                                    {% if _column_label != 'Image' and _column_label != 'Name' %}

                                        <b>{{ _column_label }}</b> :
                                        {% if  _column_label == 'Description' %}<br>{%  endif %}
                                        {{ easyadmin_render_field_for_list_view(_entity_config.name, item, metadata) }}
                                    {% elseif _column_label == 'Name' %}
                                        <h3>{{ easyadmin_render_field_for_list_view(_entity_config.name, item, metadata) }}</h3>
                                    {% else %}
                                        {{ easyadmin_render_field_for_list_view(_entity_config.name, item, metadata) }}
                                    {% endif %}
                                </div>
                            {% endfor %}

                            {% if _list_item_actions|length > 0 %}
                                {% set _column_label =  'list.row_actions'|trans(_trans_parameters, 'EasyAdminBundle') %}
                                <div data-label="{{ _column_label }}" class="actions">
                                    {% block item_actions %}
                                        {{ include('@EasyAdmin/default/includes/_actions.html.twig', {
                                            actions: _list_item_actions,
                                            request_parameters: _request_parameters,
                                            trans_parameters: _trans_parameters,
                                            item_id: _item_id
                                        }, with_context = false) }}
                                    {% endblock item_actions %}
                                </div>
                            {% endif %}

                            <small><i class="fa fa-link"></i> for assets linking</small>
                        </div>
                    </div>
                {% else %}
                    <div>
                        <div class="no-results" colspan="{{ _list_item_actions|length > 0 ? fields|length + 1 : fields|length }}">
                            {{ 'search.no_results'|trans(_trans_parameters, 'EasyAdminBundle') }}
                        </div>
                    </div>
                {% endfor %}
            {% endblock table_body %}
        </div>
    </div>

    {% block delete_form %}
        {% set referer = paginator.currentPage == paginator.nbPages and 1 != paginator.currentPage and 1 == paginator.currentPageResults.count
        ? path('easyadmin', app.request.query|merge({ page: app.request.query.get('page') - 1 }))
        : app.request.requestUri
        %}

        {{ include('@EasyAdmin/default/includes/_delete_form.html.twig', {
            view: 'list',
            referer: referer|url_encode,
            delete_form: delete_form_template,
            _trans_parameters: _trans_parameters,
            _entity_config: _entity_config,
        }, with_context = false) }}
    {% endblock delete_form %}
{% endblock main %}

{% block loadscritps %}
    <script src="{{ asset('js/admin/masonry.min.js') }}"></script>
{% endblock loadscritps %}

{% block body_javascript %}
    {{ parent() }}

    <script type="text/javascript">
        $(function() {

            var synchronized = true;
            $('#main').find('.toggle input[type="checkbox"]').change(function() {
                if(synchronized)
                    handleThemeActivation($(this));
            });

            $('.action-delete').on('click', function(e) {
                e.preventDefault();
                var id = $(this).parents('.theme-item').first().data('id');

                $('#modal-delete').modal({ backdrop: true, keyboard: true })
                        .off('click', '#modal-delete-button')
                        .on('click', '#modal-delete-button', function () {
                            var deleteForm = $('#delete-form');
                            deleteForm.attr('action', deleteForm.attr('action').replace('__id__', id));
                            deleteForm.trigger('submit');
                        });
            });
        });

        function handleThemeActivation(toggle){

            var synchronized = false;
            var newValue = toggle.prop('checked');
            var oldValue = !newValue;
            var propertyName = toggle.parent().parent().data('label').toLowerCase();

            var toggleUrl = "{{ path('easyadmin', { action: 'edit', entity: _entity_config.name, view: 'list' })|raw }}"
                    + "&id=" + toggle.parents('.theme-item').data('id')
                    + "&property=" + propertyName
                    + "&newValue=" + newValue.toString();

            var toggleRequest = $.ajax({ type: "GET", url: toggleUrl, data: {} });

            toggleRequest.done(function(result) {
                if(newValue && result){
                    var toggles = $('#main').find('.toggle input[type="checkbox"]').not(toggle);
                    $.each(toggles,function(){
                        var parent = $(this).parents('.btn.toggle').first();
                        $(this).prop('checked',false);
                        if(parent.is('.btn-success')){
                            parent.removeClass('btn-success').addClass('btn-danger off');
                        }
                    });
                    synchronized = true;
                } else
                    synchronized = true;
            });

            toggleRequest.fail(function() {
                // in case of error, restore the original value and disable the toggle
                toggle.bootstrapToggle(oldValue == true ? 'on' : 'off');
                toggle.bootstrapToggle('disable');
                synchronized = true;
            });
        }
    </script>

    {% if 'search' == app.request.get('action') %}
        <script type="text/javascript">
            var _search_query = "{{ app.request.get('query')|default('')|e('js') }}";
            // the original query is prepended to allow matching exact phrases in addition to single words
            $('#main').find('table tbody').highlight($.merge([_search_query], _search_query.split(' ')));
        </script>
    {% endif %}
{% endblock %}



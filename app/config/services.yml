# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
    app.login.success:
        class: AppBundle\Service\LoginSuccessHandler
        arguments : ["@router"]

    app.login.failure:
        class: AppBundle\Service\LoginFailureHandler
        arguments : ["@router"]

    app.comment.service:
        class: AppBundle\Service\CommentService
        arguments : ["@service_container"]

    app.menu.service:
        class: AppBundle\Service\MenuService
        arguments : ["@doctrine.orm.entity_manager","@router"]

    app.application.service:
        class: AppBundle\Service\AppService
        arguments : ["@service_container"]

    app.image.service:
        class: AppBundle\Service\ImageService
        arguments : ["@doctrine.orm.entity_manager","@kernel"]

    app.theme.service:
        class: AppBundle\Service\ThemeService
        arguments : ["@kernel","@app.application.service","@doctrine.orm.entity_manager","@session"]

    session.handler.pdo:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler
        public:    false
        arguments:
            - 'mysql:host=%database_host%;dbname=%database_name%'
            - { db_username: '%database_user%', db_password: '%database_password%' }

    lifeCycle.listener:
        class: AppBundle\Listener\LifeCycleListener
        arguments : ["@service_container"]
        tags:
            - { name: doctrine.event_listener, event: 'postLoad' }
            - { name: doctrine.event_listener, event: 'prePersist' }
            - { name: doctrine.event_listener, event: 'preUpdate' }
            - { name: doctrine.event_listener, event: 'preRemove' }
            - { name: doctrine.event_listener, event: 'postFlush' }

    # Doctrine Extension listeners to handle behaviors
    gedmo.listener.tree:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.translatable:
        class: Gedmo\Translatable\TranslatableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
            - [ setDefaultLocale, [ %locale% ] ]
            - [ setTranslationFallback, [ false ] ]

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sortable:
        class: Gedmo\Sortable\SortableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.loggable:
        class: Gedmo\Loggable\LoggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

